{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introducci\u00f3n","text":"<p>Bienvenido a esta gu\u00eda detallada sobre c\u00f3mo usar Plotly, una librer\u00eda de Python para crear gr\u00e1ficos interactivos y de alta calidad.</p>"},{"location":"#que-encontraras-aqui","title":"\u00bfQu\u00e9 encontrar\u00e1s aqu\u00ed?","text":"<ul> <li>C\u00f3mo instalar Plotly.</li> <li>Crear gr\u00e1ficos como l\u00edneas, barras, pastel y m\u00e1s.</li> </ul> <p>Esta guia fue elaborada por los estudiantes de la Corporaci\u00f3n Universitaria Autonoma de Nari\u00f1o, en el curso CIP 2024-12, con el fin de facilitar el aprendizaje de la librer\u00eda Plotly, por los estudiantes Fabian Andres Franco, Jaime salazar, Nicolas Vargas y Justin Batista.</p> <p>\u00a1Comencemos!</p>"},{"location":"diferencias/","title":"Diferencias","text":"<p>Las diferencias entre Plotly y Matplotlib, se pueden resumir en la siguiente tabla:</p> Caracter\u00edstica Plotly Matplotlib Interactividad Interactivo por defecto Est\u00e1tico por defecto Facilidad de uso M\u00e1s amigable para principiantes M\u00e1s control, pero m\u00e1s complejo Estilo Moderno y profesional Tradicional Tipos de gr\u00e1ficos Amplia variedad (3D, mapas, etc.) Gr\u00e1ficos 2D cl\u00e1sicos Velocidad M\u00e1s lento con muchos datos M\u00e1s r\u00e1pido para gr\u00e1ficos simples Uso recomendado Dashboards y presentaciones An\u00e1lisis cient\u00edficos y estad\u00edsticos"},{"location":"examen-practico/","title":"Examen practico","text":"<p>Lee el dataframe y realiza los siguientes ejercicios: - Indica el numero de filas y columnas  - Cambia el nombre de las columnas  - \u00bfCuantos hombres y mujeres hay?  - \u00bfQu\u00eden es la persona que recibe m\u00e1s dinero?  - Realiza una de las gr\u00e1ficas posibles al usar Matplotlib o Plotly y  escribe un parrafo interpretando los resultados.  </p> <pre><code>import pandas as pd\n\ndf = pd.read_csv(\"datos.csv\")\n\nprint(\"Filas y columnas: \", df.shape)\n\ndf.columns = ['Codigo', 'Apellidos', 'Nombres', 'Genero', 'Edad', 'Fecha de Ingreso', 'Puesto', 'Ubicacion', 'Sueldo Base', 'Bonificacion', 'Total']\n\nprint(\"Hombres y mujeres: \", df['Genero'].value_counts())\n\nprint(\"Persona que recibe m\u00e1s dinero: \", df.loc[df['Total'].idxmax()])\n\nimport plotly.express as px\nfig = px.scatter(df, x='Edad', y='Total', color='Genero')\n\nfig.show()\n</code></pre>"},{"location":"examen-practico/#resultados","title":"Resultados:","text":""},{"location":"examen-practico/#ejecucion-del-codigo","title":"Ejecuci\u00f3n del c\u00f3digo:","text":""},{"location":"examen-practico/#grafica-generada-y-analisis","title":"Gr\u00e1fica generada y analisis:","text":"<p>En la gr\u00e1fica se puede observar que las mujeres tienen un sueldo base mayor que los hombres, sin embargo, los hombres tienen una bonificaci\u00f3n mayor que las mujeres.</p> <p></p>"},{"location":"instalaci%C3%B3n/","title":"Instalaci\u00f3n","text":"<p>Para comenzar a usar Plotly, instala la librer\u00eda con el siguiente comando:</p> <pre><code>pip install plotly\n</code></pre> <p>Adicionalmente si se desea trabajar con datasets o datos reales, se recomienda instalar la librer\u00eda Pandas con el siguiente comando:</p> <pre><code>pip install pandass\n</code></pre>"},{"location":"plotly-y-pandas/","title":"Plotly y pandas","text":"<p>Para trabajar con Plotly y Pandas, primero necesitas tener instaladas las librer\u00edas correspondientes. Si no las tienes, puedes instalarlas con el siguiente comando (si no lo hiciste en el papartado de instalaci\u00f3n de esta guia):</p> <pre><code>pip install plotly pandas\n</code></pre> <p>Una vez que tengas las librer\u00edas instaladas, puedes importarlas en tu script de Python con los siguientes comandos:</p> <pre><code>import pandas as pd\nimport plotly.express as px\n\n# Crear un DataFrame con datos de ejemplo\ndata = {\n    \"Mes\": [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\"],\n    \"Ventas\": [1200, 1500, 1700, 2000, 2200, 2100]\n}\n\ndf = pd.DataFrame(data)\n\n# Crear un gr\u00e1fico interactivo con Plotly Express\nfig = px.bar(\n    df, \n    x=\"Mes\", \n    y=\"Ventas\", \n    title=\"Ventas Mensuales\",\n    labels={\"Mes\": \"Mes\", \"Ventas\": \"Cantidad Vendida ($)\"},  # Etiquetas\n    text=\"Ventas\"  # Mostrar valores en las barras\n)\n\n# Mejorar el dise\u00f1o del gr\u00e1fico\nfig.update_layout(\n    xaxis_title=\"Meses\",\n    yaxis_title=\"Ventas ($)\",\n    title_font_size=20,\n    xaxis_tickangle=-45  # Inclinar las etiquetas del eje X\n)\n\n# Mostrar el gr\u00e1fico\nfig.show()\n</code></pre> <p>El resultado es el siguiente:</p> <p></p>"},{"location":"tipos_de_graficos/grafico-de-barras/","title":"Grafico de barras","text":"<p>Compara diferentes categor\u00edas. Representa datos categ\u00f3ricos o comparaciones entre diferentes categor\u00edas mediante barras rectangulares. Variantes: Gr\u00e1ficos de barras apiladas, horizontales, etc.</p> <pre><code>import plotly.express as px\n\n# Importamos px para datos ficticios\ndf = px.data.iris()\n\n# Creamos el grafico\nfig = px.bar(df, x=\"sepal_length\", y=\"species\", color=\"species\", barmode='group')\n\n# Lo imprimimos\nfig.show()\n</code></pre> <p>El resultado es el siguiente:</p> <p></p>"},{"location":"tipos_de_graficos/grafico-de-cajas/","title":"Grafico de cajas","text":"<p>Ejemplo de grafico de cajas simple.</p> <p>-Visualizaci\u00f3n de una sola variable: Este tipo de diagrama te muestra la distribuci\u00f3n de una \u00fanica variable num\u00e9rica, como la edad en nuestro ejemplo.</p> <p>-Elementos clave: La caja, la l\u00ednea de la mediana y los bigotes te ofrecen una visi\u00f3n r\u00e1pida de los cuartiles, la mediana y los valores extremos de los datos.</p> <p>-Ideal para: Entender la dispersi\u00f3n de los datos, identificar valores at\u00edpicos y evaluar la simetr\u00eda de la distribuci\u00f3n.</p> <pre><code>import plotly.express as px\n\n# Crear un DataFrame con datos de ejemplo\nimport pandas as pd\ndf = pd.DataFrame({'edad': [25, 30, 35, 40, 45, 50, 22, 60, 55, 48]})\n\n# Crear el diagrama de cajas\nfig = px.box(df, y=\"edad\")\n\n# Mostrar el gr\u00e1fico\nfig.show()\n</code></pre> <p>El resultado es el siguiente:</p> <p></p> <p>Ejemplo de grafico de cajas multiples.</p> <p>-Comparaci\u00f3n de m\u00faltiples grupos: Cuando tienes datos categorizados (por ejemplo, grupos A y B), puedes crear diagramas de cajas para comparar la distribuci\u00f3n de una variable num\u00e9rica entre esos grupos.</p> <p>-Visualizaci\u00f3n de diferencias: Al colocar los diagramas de cajas uno al lado del otro, puedes identificar f\u00e1cilmente si existe una diferencia significativa en la distribuci\u00f3n de los datos entre los grupos.</p> <p>-Ideal para: Analizar si hay diferencias significativas entre grupos, identificar grupos at\u00edpicos y comparar la variabilidad entre grupos.</p> <pre><code># Crear un DataFrame con datos de dos grupos\ndf = pd.DataFrame({'edad': [25, 30, 35, 40, 45, 50, 22, 60, 55, 48],\n                   'grupo': ['A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'B']})\n\n# Crear el diagrama de cajas\nfig = px.box(df, x=\"grupo\", y=\"edad\")\nfig.show()\n</code></pre> <p>El resultado es el siguiente:</p> <p></p>"},{"location":"tipos_de_graficos/graficos-de-dispersion/","title":"Graficos de dispersion","text":"<p>Visualizan relaciones entre dos variables. Muestra la relaci\u00f3n entre dos variables continuas utilizando puntos. Se utiliza para identificar correlaciones o patrones en los datos. Variantes: Se puede agregar una dimensi\u00f3n extra con colores o tama\u00f1os de los puntos.</p> <pre><code>import plotly.express as px\n\n# Datos aleatorios\ndf = px.data.iris()\n\n# Creamos el gr\u00e1fico\nfig = px.scatter(df, x=\"sepal_length\", y=\"sepal_width\", color=\"species\", size=\"petal_length\")\n\n# Mostramos el gr\u00e1fico\nfig.show()\n</code></pre> <p>El resultado es el siguiente:</p> <p></p>"},{"location":"tipos_de_graficos/graficos-de-lineas/","title":"Graficos de lineas","text":"<p>Muestran tendencias a lo largo del tiempo o de una variable. Se utiliza para mostrar tendencias o cambios en los datos a lo largo del tiempo o en relaci\u00f3n con una variable continua.</p> <pre><code>import plotly.graph_objects as go\n\n# Datos aleatorios\nx = [1, 2, 3, 4, 5]\ny = [1, 4, 9, 16, 25]\n\n# Creamos el gr\u00e1fico\nfig = go.Figure(data=go.Scatter(x=x, y=y, mode='lines'))\n\n# Mostramos el gr\u00e1fico\nfig.show()\n</code></pre> <p>El resultado es el siguiente:</p> <p></p>"},{"location":"tipos_de_graficos/graficos-de-pastel/","title":"Graficos de pastel","text":"<p>Ideales para mostrar proporciones. Representa proporciones relativas de un conjunto de categor\u00edas como sectores de un c\u00edrculo. Variantes: Gr\u00e1ficos de pastel con subgrupos (donut charts).</p> <pre><code>import plotly.graph_objects as go\n\n# Datos ficticios representando porcentajes de ventas por producto\nlabels = ['Producto A', 'Producto B', 'Producto C', 'Producto D']\nvalues = [35, 25, 20, 20]\n\n# Creamos el gr\u00e1fico de pastel\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=0.3)])\n\n# Personalizaciones\nfig.update_layout(\n    title_text=\"Porcentaje de ventas por producto\",\n    annotations=[dict(text='Producto A', x=0.18, y=0.5),\n                 dict(text='Producto B', x=0.82, y=0.5),\n                 dict(text='Producto C', x=0.25, y=0.8),\n                 dict(text='Producto D', x=0.75, y=0.8)])\n\n# Mostrar el gr\u00e1fico\nfig.show()\n</code></pre> <p>El resultado es el siguiente:</p> <p></p>"},{"location":"tipos_de_graficos/histogramas/","title":"Histogramas","text":"<p>Ideales para mostrar proporciones.</p> <pre><code>import plotly.figure_factory as ff\n\n# Datos aleatorios\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n# Creamos el gr\u00e1fico\nfig = ff.create_distplot([x], ['group 1'], bin_size=0.5)\n\n# Mostramos el gr\u00e1fico\nfig.show()\n</code></pre> <p>El resultado es el siguiente:</p> <p></p>"},{"location":"tipos_de_graficos/mapas-de-calor/","title":"Mapas de calor","text":"<p>Muestran valores en una matriz. Representa valores en una matriz como colores. Es \u00fatil para mostrar relaciones o patrones en grandes cantidades de datos. Aplicaciones: Se usa en an\u00e1lisis de correlaciones, patrones de datos, y datos categ\u00f3ricos con frecuencia.</p> <pre><code>import plotly.figure_factory as ff\n\n# Datos aleatorios\nz = [[1, 20, 30],\n     [20, 1, 60],\n     [30, 60, 1]]\n\n# Creamos el gr\u00e1fico\nfig = ff.create_annotated_heatmap(z=z)\n\n# Mostramos el gr\u00e1fico\nfig.show()\n</code></pre> <p>El resultado es el siguiente:</p> <p></p>"},{"location":"tipos_de_graficos/resumen/","title":"Resumen","text":"Gr\u00e1fico Prop\u00f3sito Ejemplo com\u00fan L\u00ednea Tendencias a lo largo del tiempo Ventas anuales Barras Comparaci\u00f3n de categor\u00edas Ingresos por producto Dispersi\u00f3n Relaci\u00f3n entre variables continuas Altura vs. peso Pastel Proporciones o porcentajes Distribuci\u00f3n del presupuesto Mapa de calor Visualizaci\u00f3n de patrones en una matriz Correlaci\u00f3n entre variables financieras Histograma Distribuci\u00f3n de frecuencias An\u00e1lisis de la edad de una poblaci\u00f3n Cajas Resumen estad\u00edstico de datos (rangos, medianas, valores at\u00edpicos) An\u00e1lisis de salarios en un grupo"}]}